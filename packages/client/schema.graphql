directive @connection(filter: [String]!, key: String!) on FIELD

type AboutMe {
  description: String!
  fieldName: String!
  name: String!
}

type ContactInfo {
  _id: ID!
  link: String!
  linkName: String!
  positionIndex: Float!
}

type ConvertPdfToCvObjectType {
  comment: String!
  cv: CvObjectType
}

enum CvEntryType {
  CONTACT_INFO
  EDUCATION
  PROJECT
  SKILL
  WORK_EXPERIENCE
}

type CvObjectType {
  _id: ID!
  aboutMe: AboutMe
  contactInfoEntries: [ContactInfo!]
  educationEntries: [Education!]
  projectEntries: [Project!]
  skillEntries: [Skill!]
  title: String!
  userId: String!
  versionCreatedAt: Date!
  versionId: ID!
  versionNumber: Float!
  workExperienceEntries: [WorkExperience!]
}

"""Date custom scalar type"""
scalar Date

type Education {
  _id: ID!
  degree: String!
  description: String
  duration: String
  location: String
  name: String!
  positionIndex: Int!
  skills: [String!]
  type: String
}

type GenerateNewEntryItemObjectType {
  contactInfoEntries: [ContactInfo!]
  educationEntries: [Education!]
  projectEntries: [Project!]
  skillEntries: [Skill!]
  workExperienceEntries: [WorkExperience!]
}

type Mutation {
  convertPdfToCv(file: Upload!): ConvertPdfToCvObjectType!
  createNewCv(templateId: ID!): CvObjectType!
  deleteCv(cvId: ID!): Boolean!
  deleteCvEntryItem(cvId: ID!, entryFieldName: CvEntryType!, entryItemId: ID!): Boolean!
  deleteEntryItem(cvId: ID!, entryFieldName: CvEntryType!, entryItemId: ID!): Boolean!
  generateNewEntryItem(cvId: ID!, entryFieldName: CvEntryType!): GenerateNewEntryItemObjectType!
  logout: Boolean!
  reviewCv(cvId: ID!): ReviewCvOutput!
  transformCv(message: String!, templateId: String!): TransformCvObjectType!
  updateCv(cvId: ID!, data: UpdateCvInput!): CvObjectType!
}

type Project {
  _id: ID!
  description: String
  name: String!
  positionIndex: Int!
  skills: [String!]
}

type Query {
  currentUser: User!
  getCv(cvId: ID!): CvObjectType!
  getCvs: [CvObjectType!]!
  getReviewStatus(cvId: ID!): ReviewStatusType!
}

type ReviewCvOutput {
  messages: [String!]!
}

enum ReviewStatusType {
  ALREADY_REVIEWED
  NO_REVIEWS_REMAIN
  NO_SUBSCRIPTION
  READY_FOR_REVIEW
}

type ScopeObjectType {
  googleId: String!
}

type Skill {
  _id: ID!
  category: String!
  positionIndex: Int!
  skills: [String!]!
}

type TransformCvObjectType {
  comment: String!
  cv: CvObjectType!
}

input UpdateAboutMeInput {
  description: String
  fieldName: String
  name: String
}

input UpdateContactInfoInput {
  _id: ID
  link: String
  linkName: String
}

input UpdateCvInput {
  aboutMe: UpdateAboutMeInput
  contactInfoEntries: UpdateContactInfoInput
  educationEntries: [UpdateEducationInput!]
  projectEntries: [UpdateProjectInput!]
  skillEntries: [UpdateSkillInput!]
  title: String
  workExperienceEntries: [UpdateWorkExperienceInput!]
}

input UpdateEducationInput {
  _id: ID
  degree: String
  description: String
  duration: String
  location: String
  name: String
  skills: [String!]
  type: String
}

input UpdateProjectInput {
  _id: ID
  description: String
  name: String
  skills: [String!]
}

input UpdateSkillInput {
  _id: ID
  category: String
  positionIndex: Int
  skills: [String!]
}

input UpdateWorkExperienceInput {
  _id: ID
  description: String
  duration: String
  location: String
  name: String
  position: String
  skills: [String!]
  type: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  createdAt: Date!
  deletedAt: Date
  email: String!
  firstName: String!
  googleId: String!
  id: ID!
  lastName: String!
}

type WorkExperience {
  _id: ID!
  description: String
  duration: String
  location: String
  name: String!
  position: String!
  positionIndex: Int!
  skills: [String!]
  type: String
}